{"version":3,"sources":["Components/prices.js","App.js","reportWebVitals.js","index.js"],"names":["Prices","props","useState","itemArray","setItems","latestPriceObject","setLatestPriceObject","hPriceObject","setHPriceObject","refreshTime","refreshInterval","searchFilter","setSearchFilter","hideFilter","setHideFilter","highlightFilter","setHighlightFilter","useEffect","interval","setInterval","fetchMetrics","clearInterval","axios","get","then","response","data","console","log","catch","err","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","pauseOnFocusLoss","filteredItems","filter","sample","name","toLowerCase","includes","latestKeyArr","Object","keys","latestValArr","values","map","obj","high","hourKeyArr","hourObjArr","hourValArr","avgHighPrice","hourVolArr","highPriceVolume","class","placeholder","type","value","onChange","event","target","Table","striped","bordered","hover","size","reverse","examine","id","members","lowalch","limit","highalch","icon","latestIndex","findIndex","key","hourIndex","parseInt","parseFloat","toFixed","configure","App","document","title","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cb732ac.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n    Button, Table, Alert, Container, Row, Col, Spinner\n} from \"react-bootstrap\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { toast } from 'react-toastify';\n\nconst Prices = (props) => {\n    const refreshTime = 30;\n\n    const [itemArray, setItems] = useState([])\n    const [latestPriceObject, setLatestPriceObject] = useState({})\n\n    const [hPriceObject, setHPriceObject] = useState({})\n\n    const [refreshInterval, setRefreshInterval] = useState(refreshTime * 1000);\n\n    const [searchFilter, setSearchFilter] = useState(\"\")\n    const [hideFilter, setHideFilter] = useState(\"500\")\n    const [highlightFilter, setHighlightFilter] = useState(\"1500\")\n\n    const notify = () => toast.info('Refreshing prices...', {\n        position: \"bottom-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n        pauseOnFocusLoss: false,\n    });\n\n    useEffect(() => {\n        if (refreshInterval && refreshInterval > 0) {\n            const interval = setInterval(fetchMetrics, refreshInterval);\n            return () => clearInterval(interval);\n        }\n    }, [refreshInterval]);\n\n    const fetchMetrics = () => {\n        axios.get(\"https://prices.runescape.wiki/api/v1/osrs/latest\").then(response => {\n            setLatestPriceObject(response.data)\n            console.log(latestPriceObject.data)\n        }).catch(err => {\n            console.log(err);\n        })\n\n        axios.get(\"https://prices.runescape.wiki/api/v1/osrs/1h\").then(response => {\n            setHPriceObject(response.data)\n            console.log(hPriceObject.data)\n        }).catch(err => {\n            console.log(err);\n        })\n\n        notify()\n    }\n\n    useEffect(() => {\n        axios.get(\"https://prices.runescape.wiki/api/v1/osrs/mapping\").then(response => {\n            console.log(\"items: \" + response.data)\n            setItems(response.data)\n        }).catch(err => {\n            console.log(err);\n        })\n    }, [latestPriceObject, hPriceObject]\n    )\n\n\n    useEffect(() => {\n        axios.get(\"https://prices.runescape.wiki/api/v1/osrs/latest\").then(response => {\n            setLatestPriceObject(response.data)\n            console.log(latestPriceObject.data)\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []\n    )\n\n    useEffect(() => {\n        axios.get(\"https://prices.runescape.wiki/api/v1/osrs/1h\").then(response => {\n            setHPriceObject(response.data)\n            console.log(hPriceObject.data)\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []\n    )\n\n    const searchSample = (event) => {\n        setSearchFilter(event.target.value)\n    }\n\n    const searchHide = (event) => {\n        setHideFilter(event.target.value)\n    }\n\n    const searchHighlight = (event) => {\n        setHighlightFilter(event.target.value)\n    }\n\n    const filteredItems = itemArray.filter(sample =>\n        sample.name.toLowerCase().includes(searchFilter.toLowerCase()));\n\n\n    if (latestPriceObject.data === undefined || hPriceObject.data === undefined) {\n        return (\n            <div>\n                loading\n            </div>\n        )\n    } else {\n        var latestKeyArr = Object.keys(latestPriceObject.data);\n        var latestObjArr = Object.values(latestPriceObject.data);\n        var latestValArr = latestObjArr.map((obj) => obj.high)\n\n        var hourKeyArr = Object.keys(hPriceObject.data);\n        var hourObjArr = Object.values(hPriceObject.data);\n        var hourValArr = hourObjArr.map((obj) => obj.avgHighPrice)\n        var hourVolArr = hourObjArr.map((obj) => obj.highPriceVolume)\n\n        return (\n            <div>\n                <div class=\"container-fluid\">\n                    <div class=\"row p-3\">\n                            <h1>RWT sniper 9000</h1>\n                    </div>\n                </div>\n\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col m-1 p-1\">\n                            <div class=\"col\">Hide under % diff: </div>\n                            <div class=\"col\">\n                                <input class=\"text-center\" placeholder=\"500\" type=\"text\" value={hideFilter} onChange={searchHide} />\n                            </div>\n                        </div>\n\n                        <div class=\"col m-1 p-4\">\n                            <input class=\"text-center\" placeholder=\"Search...\" type=\"text\" value={searchFilter} onChange={searchSample} />\n                        </div>\n\n                        <div class=\"col m-1 p-1\">\n                            <div class=\"col\">Highlight over %: </div>\n                            <div class=\"col\">\n                                <input class=\"text-center\" placeholder=\"1000\" type=\"text\" value={highlightFilter} onChange={searchHighlight} />\n                            </div>\n                        </div>\n                    </div>\n                        \n                </div>\n\n\n                {/*latestValArr.map((key => <div>{key.high}</div>))*/}\n\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Item id</th>\n                            <th>Name</th>\n                            <th>Price high latest</th>\n                            <th>Price high 1h avg</th>\n                            <th>% diff</th>\n                            <th>Hourly volume (high price)</th>\n                            <th>Potential transfer</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {filteredItems.reverse().map(({ examine, id, members, lowalch, limit, value, highalch, icon, name }) => {\n                            var latestIndex = latestKeyArr.findIndex((key) => key == id)\n                            var hourIndex = hourKeyArr.findIndex((key) => key == id)\n\n                            if (hourValArr[hourIndex] == null) {\n                                return \"\";\n                            }\n\n                            if (((parseInt(latestValArr[latestIndex]) / parseInt(hourValArr[hourIndex])) * 100) < parseFloat(hideFilter)) {\n                                return \"\";\n                            }\n\n                            if (((parseInt(latestValArr[latestIndex]) / parseInt(hourValArr[hourIndex])) * 100) > parseFloat(highlightFilter)) {\n                                return (\n\n\n                                    <tr key={id} class=\"text-danger\">\n                                        <td class=\"text-danger\">{id}</td>\n                                        <td class=\"text-danger\">{name}</td>\n                                        <td class=\"text-danger\">{latestValArr[latestIndex]}</td>\n                                        <td class=\"text-danger\">{hourValArr[hourIndex]}</td>\n                                        <td class=\"text-danger\">{((parseInt(latestValArr[latestIndex]) / parseInt(hourValArr[hourIndex])) * 100).toFixed(0)} %</td>\n                                        <td class=\"text-danger\">{hourVolArr[hourIndex]}</td>\n                                        <td class=\"text-danger\">{parseInt(hourVolArr[hourIndex]) * parseInt(latestValArr[latestIndex])}</td>\n                                    </tr>\n\n                                )\n                            }\n\n                            \n\n\n\n                            return (\n                                <tr key={id}>\n                                    <td>{id}</td>\n                                    <td>{name}</td>\n                                    <td>{latestValArr[latestIndex]}</td>\n                                    <td>{hourValArr[hourIndex]}</td>\n                                    <td>{((parseInt(latestValArr[latestIndex]) / parseInt(hourValArr[hourIndex])) * 100).toFixed(0)} %</td>\n                                    <td>{hourVolArr[hourIndex]}</td>\n                                    <td>{parseInt(hourVolArr[hourIndex]) * parseInt(latestValArr[latestIndex])}</td>\n                                </tr>\n                            )\n                        }\n\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Prices;\n","\nimport './App.css';\n\nimport React, { useEffect } from \"react\";\n\nimport Prices from './Components/prices.js';\n\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure()\n\n// https://prices.runescape.wiki/api/v1/osrs/latest\n// https://prices.runescape.wiki/api/v1/osrs/1h\n\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"RWT sniper\"\n }, []);\n\n  return (\n    <div className=\"App\">\n      <Prices />\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}